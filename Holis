package com.jetbrains.kmpapp

import androidx.compose.foundation.isSystemInDarkTheme
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.runtime.Composable
import androidx.compose.runtime.remember
import androidx.compose.ui.graphics.vector.rememberVectorPainter
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.*
import com.jetbrains.kmpapp.screens.HomeList
import com.jetbrains.kmpapp.viewmodel.SwitchViewModel

@Composable
fun App() {
    val viewModel = remember { SwitchViewModel() }

    MaterialTheme(
        colorScheme = if (isSystemInDarkTheme()) darkColorScheme() else lightColorScheme()
    ) {
        Surface {
            HomeList(
                currentRoute = "home_list",
                onNavigate = { route ->
                    println("Navegar a: $route") // Solo imprime por ahora
                },
                viewModel = viewModel,
                events = listOf("Concierto Frozen", "Evento Morat", "Coldplay Tour"),

                // Cambiamos el icono del logo por URL (puede ser una URL real o de prueba)
                gatziLogoUrl = "https://raw.githubusercontent.com/tu_usuario/tu_repositorio/main/logo.png",

                logoutIcon = rememberVectorPainter(Icons.Default.ExitToApp),
                calendarIcon = rememberVectorPainter(Icons.Default.CalendarToday),
                locationIcon = rememberVectorPainter(Icons.Default.LocationOn),
                eventsIcon = rememberVectorPainter(Icons.Default.ConfirmationNumber),
                helpIcon = rememberVectorPainter(Icons.Default.Help),

                screenWidthDp = 360, // Valor temporal, ajusta según device real
                isPortrait = true,   // Valor temporal, ajusta según device real
                onRequestCameraPermission = {
                    println("Solicitando permiso de cámara")
                }
            )
        }
    }
}
